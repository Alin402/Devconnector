{"version":3,"sources":["components/layout/loading.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","actions/profile.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-form/CreateProfile.js","components/profile-form/EditProfile.js","components/profile-form/AddExperience.js","components/profile-form/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileAbout.js","components/profile/ProfileTop.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","uuid","require","setAlert","msg","alertType","timeout","dispatch","id","v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenedtificat","loading","className","to","onClick","href","Landing","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","alerts","alert","length","map","key","getProfile","statusText","status","createProfile","history","edit","push","src","spinner","style","width","margin","display","alt","DashboardActions","deleteExperience","delete","experience","experiences","exp","company","title","format","from","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","PropTypes","func","isRequired","window","confirm","user","useEffect","Spinner","color","Component","component","rest","render","props","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","formState","setState","displaySocialInputs","toggleSocialInputs","join","social","addExperience","put","current","description","toDateDisabled","toggleDisabled","required","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","_id","avatar","slice","skill","index","getProfiles","profiles","ProfileAbout","rel","ProfileExperience","ProfileEducation","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","Post","text","likes","comments","date","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Register","Login","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Profiles","Profile","Posts","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8aec91d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.584b607f.gif\";","import { SET_ALERT, REMOVE_ALERT } from './types';\r\nconst uuid = require('uuid');\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\r\n        const id = uuid.v4();\r\n\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: { msg, alertType, id }\r\n        });\r\n\r\n        setTimeout(() => dispatch({type: REMOVE_ALERT, payload: id}), timeout);\r\n}","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR'; \r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if(token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;\r\n\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from './types';\r\n\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//Load user\r\n\r\nexport const loadUser = () => async dispatch => {\r\n    if(localStorage.token) {\r\n        setAuthToken(localStorage.token);\r\n    }\r\n\r\n    try {\r\n        const res = await axios.get('https://blooming-bayou-50695.herokuapp.com/api/auth');\r\n\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        });\r\n    }\r\n}\r\n\r\n// Register user\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n        const res = await axios.post('https://blooming-bayou-50695.herokuapp.com/api/users', body, config);\r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg, 'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        });\r\n    }\r\n}\r\n\r\n// Login the user\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post('https://blooming-bayou-50695.herokuapp.com/api/auth', body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg, 'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n}\r\n\r\n// Logout\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    });\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n}","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenedtificat, loading }, logout }) => {\r\n\r\n    const changeNavbar = () => {\r\n        if(isAuthenedtificat)\r\n        return (\r\n        <ul>\r\n            <li><Link to='/profiles'>Developers</Link></li>\r\n            <li><Link to='/posts'>Posts</Link></li>\r\n            <li>\r\n                <Link to=\"/dashboard\">\r\n                    <i className='fa fa-user'></i>{' '}\r\n                    Dashboard\r\n                </Link>\r\n            </li>\r\n            <li><a onClick={logout} href='#!'>\r\n            <i className='fa fa-sign-out'></i>{' '}\r\n            Log Out</a></li>\r\n        </ul>\r\n    )\r\n    else\r\n        return (\r\n        <ul>\r\n            <li><Link to='/profiles'>Developers</Link></li>\r\n            <li><Link to=\"/register\">Register</Link></li>\r\n            <li><Link to=\"/login\">Login</Link></li>\r\n        </ul>\r\n    );\r\n    }\r\n    return(\r\n         <nav className=\"navbar bg-dark\">\r\n             <h1>\r\n                <Link><i className=\"fa fa-code\"></i> DevConnector</Link>\r\n             </h1>\r\n    {!loading && changeNavbar()}\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    logout: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Landing = () => {\r\n    return(\r\n        <section className=\"landing\">\r\n            <div className=\"dark-overlay\">\r\n            <div className=\"landing-inner\">\r\n                <h1 className=\"x-large\">Developer Connector</h1>\r\n                <p className=\"lead\">\r\n                Create a developer profile/portfolio, share posts and get help from\r\n                other developers\r\n                </p>\r\n                <div className=\"buttons\">\r\n                <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\r\n                <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Landing;","import React, {Fragment, useState} from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Register = ({ setAlert, register, isAuthenedtificat }) => { \r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const {name, email, password, password2} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        if(password !== password2) {\r\n              setAlert('The passwords do not match', 'danger');\r\n        } else {\r\n            register({name, email, password});\r\n        }\r\n    }\r\n\r\n    if(isAuthenedtificat) {\r\n      return <Redirect to='/dashboard' />\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n        <h1 className=\"large text-primary\">Sign Up</h1>\r\n          <p className=\"lead\"><i className=\"fa fa-user\"></i> Create Your Account</p>\r\n          <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n            <div className=\"form-group\">\r\n              <input \r\n              type=\"text\"\r\n              placeholder=\"Name\" \r\n              name=\"name\" \r\n              value={name} \r\n              onChange = {e => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input \r\n              type=\"email\" \r\n              placeholder=\"Email Address\" \r\n              name=\"email\" \r\n              value={email}\r\n              onChange={e => onChange(e)}\r\n              />\r\n              <small className=\"form-text\"\r\n                >This site uses Gravatar so if you want a profile image, use a\r\n                Gravatar email</small\r\n              >\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                name=\"password2\"\r\n                value={password2}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n          </form>\r\n          <p className=\"my-1\">\r\n            Already have an account? <Link to='/login'>Sign In</Link>\r\n        </p>\r\n    </Fragment>\r\n    );\r\n}\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenedtificat: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenedtificat: state.auth.isAuthenedtificat\r\n});\r\n\r\nexport default connect(mapStateToProps, {setAlert, register })(Register);","import React, {Fragment, useState} from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenedtificat }) => { \r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const {email, password} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value });\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        login(email, password);\r\n    }\r\n\r\n    if(isAuthenedtificat) {\r\n      return <Redirect to='/dashboard' />\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n        <h1 className=\"large text-primary\">Log In</h1>\r\n          <p className=\"lead\"><i className=\"fa fa-user\"></i></p>\r\n          <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n            <div className=\"form-group\">\r\n              <input \r\n              type=\"email\" \r\n              placeholder=\"Email Address\" \r\n              name=\"email\" \r\n              value={email}\r\n              onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </div>\r\n            <input type=\"submit\" className=\"btn btn-primary\" value=\"Log In\" />\r\n          </form>\r\n          <p className=\"my-1\">\r\n            Don't have an account? <Link to='/register'>Sign Up</Link>\r\n        </p>\r\n    </Fragment>\r\n    );\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenedtificat: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenedtificat: state.auth.isAuthenedtificat\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) => \r\n    alerts !== null && alerts.length > 0 && alerts.map(alert => (\r\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n            {alert.msg}\r\n        </div>\r\n    ));\r\n\r\nAlert.propTypes = {\r\n    alerts: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    alerts: state.alert\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    GET_PROFILES,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n    CLEAR_PROFILE,\r\n    DELETE_ACCOUNT\r\n} from './types';\r\n\r\n// Get current user's profile\r\n\r\nexport const getProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('https://blooming-bayou-50695.herokuapp.com/api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Get all profiles\r\n\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({\r\n        type: CLEAR_PROFILE\r\n    });\r\n    try {\r\n        const res = await axios.get('https://blooming-bayou-50695.herokuapp.com/api/profile');\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Get profile by id\r\n\r\nexport const getProfileById = userId => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`https://blooming-bayou-50695.herokuapp.com/api/profile/user/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n} \r\n\r\n// Create or update profile\r\n\r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('https://blooming-bayou-50695.herokuapp.com/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(edit?  'Profile updated': 'Profile created', 'success'));\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg, 'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Add experience\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('https://blooming-bayou-50695.herokuapp.com/api/profile/experience', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg, 'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n//Add education\r\nexport const addEducation = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('https://blooming-bayou-50695.herokuapp.com/api/profile/education', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg, 'danger'));\r\n            });\r\n        }\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n//Delete experience\r\n\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`https://blooming-bayou-50695.herokuapp.com/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience deleted', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`https://blooming-bayou-50695.herokuapp.com/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Education deleted', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Delete account & profile\r\n\r\nexport const deleteAccount = () => async dispatch => {\r\n    if(window.confirm('Are you sure')) {\r\n        try {\r\n            const res = await axios.delete('https://blooming-bayou-50695.herokuapp.com/api/profile');\r\n    \r\n            dispatch({ type: CLEAR_PROFILE });\r\n            dispatch({ type: DELETE_ACCOUNT });\r\n    \r\n            dispatch(setAlert('Your account has been permanently deleted'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type: PROFILE_ERROR,\r\n                payload: {msg: err.response.statusText, status: err.response.status}\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './loading.gif';\r\n\r\nexport default () => \r\n    <Fragment>\r\n        <img \r\n            src={spinner}\r\n            style={{width: '200px', margin: 'auto', display: 'block'}}\r\n            alt='Loading...'\r\n        />\r\n    </Fragment>","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardActions = () => {\r\n    return (\r\n        <div className=\"dash-buttons\">\r\n        <Link to=\"/edit-profile\" className=\"btn btn-light\">\r\n            <i className=\"fa fa-user-circle text-primary\"></i> Edit Profile\r\n        </Link>\r\n        <Link to=\"/add-experience\" className=\"btn btn-light\">\r\n            <i className=\"fa fa-black-tie text-primary\"></i> Add Experience\r\n        </Link>\r\n        <Link to=\"/add-education\" className=\"btn btn-light\">\r\n            <i className=\"fa fa-graduation-cap text-primary\"></i> Add Education\r\n        </Link>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default DashboardActions;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n    const experiences = experience.map(exp => (\r\n        <tr key={exp.id}>\r\n            <td>{exp.company}</td>\r\n            <td className='hide-sm'>{exp.title}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>\r\n                    {exp.from}\r\n                </Moment> - {\r\n                    exp.to === null ? (' Now') : \r\n                    (<Moment format='YYYY/MM/DD'>\r\n                        {exp.to}\r\n                    </Moment>)\r\n                }\r\n            </td>\r\n\r\n            <td>\r\n                <button onClick={() => deleteExperience(exp.id)} className='btn btn-danger'>Delete</button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='my-2'>Experience Credentials</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th className='hide-sm'>Title</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {experiences}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired,\r\n    deleteExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n    const educations = education.map(edu => (\r\n        <tr key={edu.id}>\r\n            <td>{edu.school}</td>\r\n            <td className='hide-sm'>{edu.degree}</td>\r\n            <td>\r\n                <Moment format='YYYY/MM/DD'>\r\n                    {edu.from}\r\n                </Moment> - {\r\n                    edu.to === null ? (' Now') : \r\n                    (<Moment format='YYYY/MM/DD'>\r\n                        {edu.to}\r\n                    </Moment>)\r\n                }\r\n            </td>\r\n\r\n            <td>\r\n                <button onClick={() => deleteEducation(edu.id)} className='btn btn-danger'>Delete</button>\r\n            </td>\r\n        </tr>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='my-2'>Education Credentials</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th className='hide-sm'>Degree</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {educations}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    education: PropTypes.array.isRequired,\r\n    deleteEducation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteEducation })(Education);","import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { getProfile } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { deleteAccount } from '../../actions/profile';\r\n\r\nconst Dashboard = ({ getProfile, auth: { user }, profile: { profile, loading }, deleteAccount }) => {\r\n    useEffect(() => {\r\n        getProfile();\r\n    }, []);\r\n    return loading && profile === null? <Spinner />: \r\n        <Fragment>\r\n            <h1 className='large text-primary'>Dashboard</h1>\r\n            <p className='lead'>\r\n                <i className='fa fa-user'></i> {' '}\r\n                Welcome <span style={{color: '#20b2aa'}}>{ user && user.name }</span>\r\n            </p>\r\n            {profile !== null ? \r\n            <Fragment>\r\n                <DashboardActions />\r\n                <Experience experience={profile.experience} />\r\n                <Education education={profile.education} />\r\n\r\n                <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n                    <i className='fa fa-user-times'></i> {' '}\r\n                    Delete Account\r\n                </button>\r\n            </Fragment>: \r\n            <Fragment>\r\n                <p>You have not set up yet a profile, please add some info</p>\r\n                <Link to='/create-profile' className='btn btn-primary my-1'>\r\n                    Create Profile    \r\n                </Link>    \r\n            </Fragment>}\r\n        </Fragment>\r\n}\r\n\r\nDashboard.propTypes = {\r\n    getProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile,\r\n    deleteAccount: PropTypes.func.isRequired\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfile, deleteAccount })(Dashboard);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, auth: {isAuthenedtificat, loading}, ...rest }) => (\r\n    <Route {...rest} render={props => !isAuthenedtificat && !loading? \r\n        (<Redirect to='/login' />):\r\n        (<Component {...props} />)}\r\n    />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { useState, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n    const [formState, setState] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formState;\r\n\r\n    const onChange = e => setState({...formState, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formState, history);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Create Your Profile\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fa fa-user\"></i> Let's get some information to make your\r\n                profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                    <option value=\"0\">* Select Professional Status</option>\r\n                    <option value=\"Developer\">Developer</option>\r\n                    <option value=\"Junior Developer\">Junior Developer</option>\r\n                    <option value=\"Senior Developer\">Senior Developer</option>\r\n                    <option value=\"Manager\">Manager</option>\r\n                    <option value=\"Student or Learning\">Student or Learning</option>\r\n                    <option value=\"Instructor\">Instructor or Teacher</option>\r\n                    <option value=\"Intern\">Intern</option>\r\n                    <option value=\"Other\">Other</option>\r\n                </select>\r\n                <small className=\"form-text\"\r\n                    >Give us an idea of where you are at in your career</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >Could be your own company or one you work for</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >Could be your own or a company website</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >City & state suggested (eg. Boston, MA)</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >Please use comma separated values (eg.\r\n                    HTML,CSS,JavaScript,PHP)</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Github Username\"\r\n                    name=\"githubusername\"\r\n                    value={githubusername} \r\n                    onChange={e => onChange(e)}\r\n                />\r\n                <small className=\"form-text\"\r\n                    >If you want your latest repos and a Github link, include your\r\n                    username</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\r\n                <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n                    Add Social Network Links\r\n                </button>\r\n                <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && \r\n                    <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                    <i className=\"fa fa-twitter fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fa fa-facebook fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fa fa-youtube fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fa fa-linkedin fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fa fa-instagram fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\r\n                    </div>    \r\n                </Fragment>}\r\n                \r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to='/dashboard'>Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({ profile: { profile, loading }, createProfile, history, getProfile }) => {\r\n    const [formState, setState] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: '',\r\n    });\r\n\r\n    const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getProfile();\r\n\r\n        setState({\r\n            company: loading || !profile.company ? '': profile.company,\r\n            website: loading || !profile.website ? '': profile.website,\r\n            location: loading || !profile.location ? '': profile.location,\r\n            status: loading || !profile.status ? '': profile.status,\r\n            skills: loading || !profile.skills ? '': profile.skills.join(','),\r\n            githubusername: loading || !profile.githubusername ? '': profile.githubusername,\r\n            bio: loading || !profile.bio ? '': profile.bio,\r\n            twitter: loading || !profile.social ? '': profile.social.twitter,\r\n            facebook: loading || !profile.social ? '': profile.social.facebook,\r\n            linkedin: loading || !profile.social ? '': profile.social.linkedin,\r\n            youtube: loading || !profile.social ? '': profile.social.youtube,\r\n            instagram: loading || !profile.social ? '': profile.social.instagram,\r\n        })\r\n    }, [loading]);\r\n\r\n    const {\r\n        company,\r\n        website,\r\n        location,\r\n        status,\r\n        skills,\r\n        githubusername,\r\n        bio,\r\n        twitter,\r\n        facebook,\r\n        linkedin,\r\n        youtube,\r\n        instagram\r\n    } = formState;\r\n\r\n    const onChange = e => setState({...formState, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formState, history);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Create Your Profile\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fa fa-user\"></i> Let's get some information to make your\r\n                profile stand out\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n                    <option value=\"0\">* Select Professional Status</option>\r\n                    <option value=\"Developer\">Developer</option>\r\n                    <option value=\"Junior Developer\">Junior Developer</option>\r\n                    <option value=\"Senior Developer\">Senior Developer</option>\r\n                    <option value=\"Manager\">Manager</option>\r\n                    <option value=\"Student or Learning\">Student or Learning</option>\r\n                    <option value=\"Instructor\">Instructor or Teacher</option>\r\n                    <option value=\"Intern\">Intern</option>\r\n                    <option value=\"Other\">Other</option>\r\n                </select>\r\n                <small className=\"form-text\"\r\n                    >Give us an idea of where you are at in your career</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >Could be your own company or one you work for</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >Could be your own or a company website</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >City & state suggested (eg. Boston, MA)</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\r\n                <small className=\"form-text\"\r\n                    >Please use comma separated values (eg.\r\n                    HTML,CSS,JavaScript,PHP)</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Github Username\"\r\n                    name=\"githubusername\"\r\n                    value={githubusername} \r\n                    onChange={e => onChange(e)}\r\n                />\r\n                <small className=\"form-text\"\r\n                    >If you want your latest repos and a Github link, include your\r\n                    username</small\r\n                >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={e => onChange(e)}></textarea>\r\n                <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n                    Add Social Network Links\r\n                </button>\r\n                <span>Optional</span>\r\n                </div>\r\n\r\n                {displaySocialInputs && \r\n                    <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                    <i className=\"fa fa-twitter fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fa fa-facebook fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fa fa-youtube fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fa fa-linkedin fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={e => onChange(e)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group social-input\">\r\n                    <i className=\"fa fa-instagram fa-2x\"></i>\r\n                    <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={e => onChange(e)}/>\r\n                    </div>    \r\n                </Fragment>}\r\n                \r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to='/dashboard'>Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    getProfile: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getProfile })(withRouter(EditProfile));","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        title: '',\r\n        location: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { company,  title, location, from, to, current, description} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Add An Experience\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fa fa-wrench\"></i> Add any developer/programming\r\n                positions that you have had in the past\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addExperience(formData, history);\r\n            }}>\r\n                <div className=\"form-group\">\r\n                <input value={title} onChange={e => onChange(e)} type=\"text\" placeholder=\"* Job Title\" name=\"title\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input value={company} onChange={e => onChange(e)} type=\"text\" placeholder=\"* Company\" name=\"company\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input value={location} onChange={e => onChange(e)} type=\"text\" placeholder=\"Location\" name=\"location\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <h4>From Date</h4>\r\n                <input value={from} onChange={e => onChange(e)} type=\"date\" name=\"from\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <p><input checked={current} value={current} onChange={e => {\r\n                    setFormData({...formData, current: !current});\r\n                    toggleDisabled(!toDateDisabled);\r\n                }} type=\"checkbox\" name=\"current\" value=\"\" /> Current Job</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <h4>To Date</h4>\r\n                <input disabled={toDateDisabled? 'disabled': ''} value={to} onChange={e => onChange(e)} type=\"date\" name=\"to\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <textarea\r\n                    value={description} \r\n                    onChange={e => onChange(e)}\r\n                    name=\"description\"\r\n                    cols=\"30\"\r\n                    rows=\"5\"\r\n                    placeholder=\"Job Description\"\r\n                ></textarea>\r\n                </div>\r\n                <input  type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to='/dashboard' >Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddExperience.propTypes = {\r\n    addExperience: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n    const [formData, setFormData] = useState({\r\n        school: '',\r\n        degree: '',\r\n        fieldofstudy: '',\r\n        from: '',\r\n        to: '',\r\n        current: false,\r\n        description: ''\r\n    });\r\n\r\n    const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n    const { school,  degree, fieldofstudy, from, to, current, description} = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"large text-primary\">\r\n                Add your education\r\n            </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fa fa-graduation-cap\"></i> Add any school or bootcamp\r\n                that you have attended\r\n            </p>\r\n            <small>* = required field</small>\r\n            <form className=\"form\" onSubmit={e => {\r\n                e.preventDefault();\r\n                addEducation(formData, history);\r\n            }}>\r\n                <div className=\"form-group\">\r\n                <input value={school} onChange={e => onChange(e)} type=\"text\" placeholder=\"* School or bootcamp\" name=\"school\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input value={degree} onChange={e => onChange(e)} type=\"text\" placeholder=\"* Degree or Certificate\" name=\"degree\" required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <input value={fieldofstudy} onChange={e => onChange(e)} type=\"text\" placeholder=\"Field of Study\" name=\"fieldofstudy\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <h4>From Date</h4>\r\n                <input value={from} onChange={e => onChange(e)} type=\"date\" name=\"from\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <p><input checked={current} value={current} onChange={e => {\r\n                    setFormData({...formData, current: !current});\r\n                    toggleDisabled(!toDateDisabled);\r\n                }} type=\"checkbox\" name=\"current\" value=\"\" /> Current School</p>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <h4>To Date</h4>\r\n                <input disabled={toDateDisabled? 'disabled': ''} value={to} onChange={e => onChange(e)} type=\"date\" name=\"to\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <textarea\r\n                    value={description} \r\n                    onChange={e => onChange(e)}\r\n                    name=\"description\"\r\n                    cols=\"30\"\r\n                    rows=\"5\"\r\n                    placeholder=\"Job Description\"\r\n                ></textarea>\r\n                </div>\r\n                <input  type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to='/dashboard' >Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAddEducation.propTypes = {\r\n    addEducation: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({ profile: { user: {_id, name, avatar}, status, company, location, skills } }) => {\r\n    return (\r\n        <div className='profile bg-light'>\r\n            <img className='round-img' src={avatar} alt='No profile image'></img>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{status} {company && <span>at {company}</span>}</p>\r\n                <p className='my-1'>{location && <span>{location}</span>}</p>\r\n                <Link to={`/profile/${_id}`} className='btn btn-primary'> View Profile\r\n                </Link>\r\n            </div>\r\n\r\n            <ul>\r\n                {skills.slice(0, 4).map((skill, index) => (\r\n                    <li key={index} className='text-primary'>\r\n                        {skill}\r\n                        <i className='fa fa-check'></i>\r\n                    </li>  \r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileItem.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfiles } from '../../actions/profile';\r\nimport { connect } from 'react-redux';\r\nimport ProfileItem from './ProfileItem';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n    useEffect(() => {\r\n        getProfiles();\r\n    }, [getProfiles]);\r\n    return (\r\n        <Fragment>\r\n            { loading ? <Spinner />: \r\n            <Fragment>\r\n                <h1 className='large text-primary'>Developers</h1>\r\n                <p className='lead'>\r\n                    <i className='fa fa-connectdevelop'></i>\r\n                    Browse and connect with developers\r\n                </p>\r\n\r\n                <div className='profiles'>\r\n                    { profiles.length > 0 ? (\r\n                        profiles.map(profile => (\r\n                            <ProfileItem key={profile._id} profile={profile} />\r\n                        ))\r\n                    ):\r\n                    (<h4>No profiles found...</h4>)\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProfiles.propTypes = {\r\n    getProfiles: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({ profile: { bio, skills, user } }) => {\r\n    return (\r\n        <div className=\"profile-about bg-light p-2\">\r\n\r\n            {\r\n                bio && (\r\n                    <Fragment>\r\n                        <h2 className=\"text-primary\">{`${user.name}'s bio`}</h2>\r\n                        <p>\r\n                            {bio}\r\n                        </p>\r\n                        <div className=\"line\"></div>\r\n                    </Fragment>\r\n                )\r\n            }\r\n          <h2 className=\"text-primary\">Skill Set</h2>\r\n          <div className=\"skills\">\r\n              {\r\n                  skills.map((skill, index) => (\r\n                    <div key={index} className=\"p-1\"><i className=\"fa fa-check\"></i>{skill}</div> \r\n                  ))\r\n               }\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileAbout.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ProfileTop = ({ \r\n    profile: {\r\n        status,\r\n        website,\r\n        location,\r\n        social,\r\n        user: { name, avatar }\r\n    }\r\n }) => {\r\n    return (\r\n        <div className=\"profile-top bg-primary p-2\">\r\n          <img\r\n            className=\"round-img my-1\"\r\n            src=\"https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50?s=200\"\r\n            alt=\"\"\r\n          />\r\n          <h1 className=\"large\">John Doe</h1>\r\n          <p className=\"lead\">Developer at Microsoft</p>\r\n          <p>Seattle, WA</p>\r\n          <div className=\"icons my-1\">\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fa fa-globe fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fa fa-twitter fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fa fa-facebook fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fa fa-linkedin fa-2x\"></i>\r\n            </a>\r\n             <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fa fa-youtube fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i className=\"fa fa-instagram fa-2x\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nProfileTop.propTypes = {\r\n    profile: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n});\r\n\r\nexport default connect()(ProfileTop);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({ experience: { \r\n    company, \r\n    title, \r\n    location, \r\n    current, \r\n    to, \r\n    from, \r\n    description \r\n    } }) => {\r\n        return (\r\n            <div>\r\n                <h3 className='text-dark'>{ company }</h3>\r\n\r\n                <p>\r\n                    <Moment format='YYYY/MM/DD'>{from}</Moment> - {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Position: </strong> {title}\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Description: </strong> {description}\r\n                </p>\r\n            </div>\r\n        )\r\n}\r\n\r\nProfileExperience.propTypes = {\r\n    experience: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({ education: { \r\n    school, \r\n    degree, \r\n    fieldofstudy, \r\n    current, \r\n    to, \r\n    from, \r\n    description \r\n    } }) => {\r\n        return (\r\n            <div>\r\n                <h3 className='text-dark'>{ school }</h3>\r\n\r\n                <p>\r\n                    <Moment format='YYYY/MM/DD'>{from}</Moment> - {!to ? ' Now' : <Moment format='YYYY/MM/DD'>{to}</Moment>}\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Degree: </strong> {degree} \r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Field of Study: </strong> {fieldofstudy} \r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Description: </strong> {description}\r\n                </p>\r\n            </div>\r\n        )\r\n}\r\n\r\nProfileEducation.propTypes = {\r\n    education: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ProfileEducation;","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById, getProfile } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\n\r\nconst Profile = ({ match, profile: { profile, loading }, auth, getProfileById }) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    }, [getProfileById]);\r\n    return (\r\n        <Fragment>\r\n            { profile === null || loading ? <Spinner />: \r\n            <Fragment>\r\n                <Link to='/profiles' className='btn btn-light'>Go Back to Profiles</Link>\r\n                {auth.isAuthenedtificat && !auth.loading && auth.user._id === profile.user._id\r\n                && (<Link to='/edit-profile' className='btn btn-dark'>Edit Profile</Link>)}\r\n            </Fragment> }\r\n\r\n            <div className='profile-grid my-1'>\r\n            <div className=\"profile-top bg-primary p-2\">\r\n                <img\r\n                    className=\"round-img my-1\"\r\n                    src={profile && profile.user.avatar}\r\n                    alt=\"\"\r\n                />\r\n                <h1 className=\"large\">{profile && profile.user.name}</h1>\r\n                <p className=\"lead\">{profile && profile.status} at {profile && profile.company && <span>{profile.company}</span>}</p>\r\n                <p>{profile && profile.location}</p>\r\n                <div className=\"icons my-1\">\r\n                    {\r\n                        profile && profile.website && (\r\n                            <a href={profile.website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <i className=\"fa fa-globe\"></i>\r\n                            </a>\r\n                        )\r\n                    }\r\n                    <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fa fa-twitter fa-2x\"></i>\r\n                    </a>\r\n                    <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fa fa-facebook fa-2x\"></i>\r\n                    </a>\r\n                    <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fa fa-linkedin fa-2x\"></i>\r\n                    </a>\r\n                    <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fa fa-youtube fa-2x\"></i>\r\n                    </a>\r\n                    <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i className=\"fa fa-instagram fa-2x\"></i>\r\n                    </a>\r\n                </div>\r\n                </div>\r\n\r\n                {\r\n                    profile &&\r\n                    <ProfileAbout profile={profile}/>\r\n                }\r\n\r\n                <div className='profile-exp bg-white p-2'>\r\n                    <h2 className='text-primary'>Experience</h2>\r\n                    {\r\n                        profile && profile.experience && profile.experience.length > 0 ? (<Fragment>\r\n                            {\r\n                                profile.experience.map(exp => (\r\n                                    <ProfileExperience key={exp._id} experience={exp} />\r\n                                ))\r\n                            }\r\n                        </Fragment>) : (<h4>No experience credentials</h4>)\r\n                    }\r\n                </div>\r\n\r\n                <div className='profile-edu bg-white p-2'>\r\n                    <h2 className='text-primary'>Education</h2>\r\n                    {\r\n                        profile && profile.education && profile.education.length > 0 ? (<Fragment>\r\n                            {\r\n                                profile.education.map(edu => (\r\n                                    <ProfileEducation key={edu._id} education={edu} />\r\n                                ))\r\n                            }\r\n                        </Fragment>) : (<h4>No education credentials</h4>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({ auth, addLike, removeLike, deletePost, Post: { _id, text, name, avatar, user, likes, comments, date }, showActions }) => {\r\n    return (\r\n        <div className=\"post bg-white p-1 my-1\">\r\n          <div>\r\n            <Link to={`profile/${user}`}>\r\n              <img\r\n                className=\"round-img\"\r\n                src={avatar}\r\n                alt=\"\"\r\n              />\r\n              <h4>{name}</h4>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <p className=\"my-1\">\r\n              {text}\r\n            </p>\r\n             <p className=\"post-date\">\r\n                Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n            </p>\r\n\r\n            {showActions && <Fragment>\r\n              <button onClick={e => addLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"fa fa-thumbs-up\"></i> {' '}\r\n            <span>{likes.length}</span>\r\n            </button>\r\n            <button onClick={e => removeLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"fa fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n                Discussion <span className='comment-count'>{comments.length}</span>\r\n            </Link>\r\n\r\n            {!auth.loading && user === auth.user._id && (\r\n                 <button\r\n                    onClick={e => deletePost(_id)}   \r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    >\r\n                    <i className=\"fa fa-times\"></i>\r\n                </button>\r\n            )}\r\n              </Fragment>}  \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n}\r\n\r\nPostItem.propTypes = {\r\n    Post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(PostItem);\r\n","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from './types';\r\n\r\nimport axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('https://blooming-bayou-50695.herokuapp.com/api/posts');\r\n\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Add like\r\nexport const addLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`https://blooming-bayou-50695.herokuapp.com/api/posts/like/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {\r\n                id,\r\n                likes: res.data\r\n            }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Remove like\r\nexport const removeLike = id => async dispatch => {\r\n    try {\r\n        const res = await axios.put(`https://blooming-bayou-50695.herokuapp.com/api/posts/unlike/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_LIKES,\r\n            payload: {\r\n                id,\r\n                likes: res.data\r\n            }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Delete post\r\nexport const deletePost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`https://blooming-bayou-50695.herokuapp.com/api/posts/${id}`);\r\n\r\n        dispatch(setAlert('Post Removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\nexport const addPost = formData => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        await axios.post('https://blooming-bayou-50695.herokuapp.com/api/posts', JSON.stringify(formData), config);\r\n\r\n        dispatch({\r\n            type: ADD_POST,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n// Get post\r\nexport const getPost = id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`https://blooming-bayou-50695.herokuapp.com/api/posts/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n    try {\r\n        await axios.post(`https://blooming-bayou-50695.herokuapp.com/api/posts/comment/${postId}`, JSON.stringify(formData), config);\r\n\r\n        dispatch({\r\n            type: ADD_COMMENT,\r\n        });\r\n\r\n        dispatch(setAlert('Comment Added', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteComment = (postId, commentId) => async dispatch => {\r\n    try {\r\n        await axios.delete(`https://blooming-bayou-50695.herokuapp.com/api/posts/comment/${postId}/${commentId}`);\r\n\r\n        dispatch({\r\n            type: REMOVE_COMMENT,\r\n        });\r\n\r\n        dispatch(setAlert('Comment Removed', 'success'));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: POST_ERROR,\r\n            payload: {msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <div className=\"post-form\">\r\n        <div className=\"bg-primary p\">\r\n          <h3>Say Something...</h3>\r\n        </div>\r\n        <form className=\"form my-1\" onSubmit={ e => {\r\n            e.preventDefault();\r\n            addPost({ text });\r\n            setText('');\r\n        }\r\n        }\r\n        >\r\n          <textarea\r\n            value={text}\r\n            onChange={e => setText(e.target.value)}\r\n            name=\"text\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Create a post\"\r\n            required\r\n          ></textarea>\r\n          <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nPostForm.propTypes = {\r\n    addPost: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from '../../actions/post';\r\nimport Spinner from '../layout/Spinner'; \r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [getPosts, posts]);\r\n    return loading ? <Spinner /> : (\r\n        <Fragment>\r\n            <h1 className='large text-primary'>Posts</h1>\r\n\r\n            <p className='lead'>\r\n                <i className='fa fa-user'></i>\r\n                Welcome to the community\r\n            </p>\r\n\r\n            <PostForm />\r\n\r\n            <div className='posts'>\r\n                {\r\n                    posts.map(post => (\r\n                        <PostItem key={post._id} Post={post} />\r\n                    ))\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({postId, addComment }) => {\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <div className=\"post-form\">\r\n        <div className=\"bg-primary p\">\r\n          <h3>Leave a Comment</h3>\r\n        </div>\r\n        <form className=\"form my-1\" onSubmit={ e => {\r\n            e.preventDefault();\r\n            addComment(postId, { text });\r\n            setText('');\r\n        }\r\n        }\r\n        >\r\n          <textarea\r\n            value={text}\r\n            onChange={e => setText(e.target.value)}\r\n            name=\"text\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Create a comment\"\r\n            required\r\n          ></textarea>\r\n          <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    addComment: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({ \r\n    postId,\r\n    comment: { _id, text, name, avatar, user, date },\r\n    auth,\r\n    deleteComment\r\n }) => {\r\n    return (\r\n        <div className=\"post bg-white p-1 my-1\">\r\n          <div>\r\n            <Link to={`/profile/${user}`}>\r\n              <img\r\n                className=\"round-img\"\r\n                src={avatar}\r\n                alt=\"\"\r\n              />\r\n              <h4>{name}</h4>\r\n            </Link>\r\n          </div>\r\n          <div>\r\n            <p className=\"my-1\">\r\n              {text}\r\n            </p>\r\n             <p className=\"post-date\">\r\n                Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n            </p>\r\n            {\r\n                !auth.loading && user === auth.user._id && (\r\n                    <button onClick={e => deleteComment(postId, _id)} className='btn btn-danger'>\r\n                        <i className='fa fa-times'></i>\r\n                    </button>\r\n                )\r\n            }\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCommentItem.propTypes = {\r\n    postId: PropTypes.number.isRequired,\r\n    comment: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getPost } from '../../actions/post';\r\nimport PostItem from '../posts/PostItem';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match}) => {\r\n    useEffect(() => {\r\n        getPost(match.params.id);\r\n    }, [getPost, post && post.comments]);\r\n    return loading ? <Spinner />:\r\n    <Fragment>\r\n        <Link to='/posts' className='btn'>Go back to posts</Link>\r\n        {\r\n        post && <PostItem  showActions={false} Post={post} />\r\n        }\r\n        {\r\n        post && <CommentForm postId={post._id} />\r\n        }\r\n\r\n        <div className='comments'>\r\n            {\r\n                post && post.comments.map(comment => (\r\n                    <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    </Fragment>\r\n}\r\n\r\nPost.propTypes = {\r\n    getPost: PropTypes.func.isRequired,\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    post: state.post\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch(type) {\r\n        case SET_ALERT:\r\n            return [...state, action.payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    DELETE_ACCOUNT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenedtificat: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenedtificat: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token);\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenedtificat: true,\r\n                loading: false\r\n            }\r\n        case DELETE_ACCOUNT:\r\n        case LOGOUT:\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenedtificat: false,\r\n                loading: false\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES\r\n } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    loading: true,\r\n    error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch(type) {\r\n        case UPDATE_PROFILE:\r\n        case GET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: payload,\r\n                loading: false\r\n            }\r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles: payload,\r\n                loading: false\r\n            }\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                profile: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                loading: false\r\n            }\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: payload,\r\n                loading: false\r\n            }\r\n        case POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false\r\n            }\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case ADD_POST:\r\n            return {\r\n                ...state, \r\n                loading: false\r\n            }\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case REMOVE_COMMENT: \r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React, {Fragment, useEffect} from 'react';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport setAuthToken from './utils/setAuthToken';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport CreateProfile from './components/profile-form/CreateProfile';\nimport EditProfile from './components/profile-form/EditProfile';\nimport AddExperience from './components/profile-form/AddExperience';\nimport AddEducation from './components/profile-form/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\n\n//Redux\nimport { Provider, connect } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\n\nif(localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return(\n    <Provider store = {store}>\n    <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={ Landing } />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/register' component={ Register } />\n              <Route exact path='/login' component={ Login } />\n              <PrivateRoute exact path='/dashboard' component={ Dashboard } />\n              <PrivateRoute exact path='/create-profile' component={ CreateProfile } />\n              <PrivateRoute exact path='/edit-profile' component={ EditProfile } />\n              <PrivateRoute exact path='/add-experience' component={ AddExperience } />\n              <PrivateRoute exact path='/add-education' component={ AddEducation } />\n              <Route exact path='/profiles' component={ Profiles } />\n              <Route exact path='/profile/:id' component={ Profile } />\n              <PrivateRoute exact path='/posts' component={ Posts } />\n              <PrivateRoute exact path='/posts/:id' component={ Post } />\n            </Switch>\n          </section>\n        </Fragment>\n    </Router>\n  </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}